Inter-thread communication is essential in multithreading to enable threads to cooperate
and share information. It helps in managing resources effectively and ensures that threads
work in harmony, especially when accessing shared data.

Object Monitor
Every object in Java has a monitor, which is a synchronization construct that allows threads
to lock and unlock the object for accessing its synchronized methods or blocks.
Only one thread can own a monitor at a time, ensuring exclusive access to synchronized methods.

Wait, Notify, and NotifyAll
These methods are used for inter-thread communication:
wait(): Causes the current thread to wait until another thread invokes notify() or notifyAll() on the same object.
notify(): Wakes up a single thread that is waiting on the object's monitor.
notifyAll(): Wakes up all threads waiting on the object's monitor.